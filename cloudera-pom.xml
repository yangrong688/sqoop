<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project>
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>com.cloudera.cdh</groupId>
    <artifactId>sqoop-root</artifactId>
    <version>1.4.7-cdh6.3.3</version>
    <relativePath>cloudera/maven-packaging/pom.xml</relativePath>
  </parent>
  
  <groupId>com.cloudera.cdh</groupId>
  <artifactId>sqoop-ant</artifactId>
  <version>1.4.7-cdh6.3.3</version>
  <packaging>pom</packaging>
  
  <scm>
    <connection>scm:git:git@git.sf.cloudera.com:sqoop.git</connection>
    <url>git@git.sf.cloudera.com:sqoop.git</url>
  </scm>
  
  <description>Sqoop ant</description>
  <name>Sqoop ant</name>
  
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  
  <organization>
    <name>Cloudera</name>
    <url>http://www.cloudera.com</url>
  </organization>
  
  <profiles>
    <!--To allow standalone project to fetch CDH artifacts -->
    <!--Activate by default doing a negation of negation   -->
    <!-- this trick allows CDH root to switch it off       -->
    <profile>
      <id>cdh.repos</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>use.cdh.repos</name>
          <value>!false</value>
        </property>
      </activation>
      <repositories>
        <repository>
          <id>cdh.releases.repo</id>
          <url>https://repository.cloudera.com/content/group/cdh-releases-rcs</url>
          <name>CDH Releases Repository</name>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>cdh.snapshots.repo</id>
          <url>https://repository.cloudera.com/content/repositories/snapshots</url>
          <name>CDH Snapshots Repository</name>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
    <!-- Similar logic to allow us to skip compilation/tests when run -->
    <!-- via do-release-build or packaging scripts, since we're already -->
    <!-- compiling via direct ant calls. -->
    <profile>
      <id>non.release.build</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>not.cdh.release.build</name>
          <value>!false</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <inherited>false</inherited>
            <executions>
              <execution>
                <id>clean</id>
                <configuration>
                  <target>
                    <exec executable="${ant.cmd}" dir="${basedir}" failonerror="true">
                      <arg value="clean"/>
                      <arg value="-Dcdh.maven=true"/>
                      <arg value="-Divy.cache.dir=${ivy.cache.dir}"/>
                      <arg value="-Drepo.maven.org=${repo.maven.org}"/>
                    </exec>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>clean</phase>
              </execution>
              <execution>
                <id>compile</id>
                <configuration>
                  <target>
                    <exec executable="${ant.cmd}" dir="${basedir}" failonerror="true">
                      <arg value="jar-all"/>
                      <arg value="-Dcdh.maven=true"/>
                      <arg value="-Dreactor.repo=file://${maven.repo.local}"/>
                      <arg value="-Divy.cache.dir=${ivy.cache.dir}"/>
                      <arg value="-Drepo.maven.org=${repo.maven.org}"/>
                    </exec>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>compile</phase>
              </execution>
              <execution>
                <id>test</id>
                <configuration>
                  <target unless="${skipTests}">
                    <exec executable="${ant.cmd}" dir="${basedir}" failonerror="true">
                      <arg value="test"/>
                      <arg value="-Dcdh.maven=true"/>
                      <arg value="-Dreactor.repo=file://${maven.repo.local}"/>
                      <arg value="-Divy.cache.dir=${ivy.cache.dir}"/>
                      <arg value="-Drepo.maven.org=${repo.maven.org}"/>
                    </exec>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
  <build>
    <plugins>
      <!-- Uses Maven to substitute variables from cloudera/maven-packaging/templates/cdh.build.properties
           into cdh.build.properties in the base dir. -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/cloudera/maven-packaging/templates</directory>
                  <includes>
                    <include>cdh.build.properties</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
</project>
